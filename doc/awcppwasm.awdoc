AW{"type":"mjmd"}
WebAssembly
===========

Using [WebAssembly](https://webassembly.org/) it is possbile to run the compiled C++ code in the browser. This makes it possible to produce documentation that viewers can interact with without the use of a server. However, the C++ has to be compiled to webassembly using a server. Once compiled, the WebAssembly can be run in the browser taking paramaters from the document.

Experimental
------------

To get started with WebAssembly support it was necessary to understand how the WebAssembly, or *wasm*, could be integrated into an AwDoc. Two important concepts had to be proven before investing further development effort:

- Running the wasm
- Passing JSON to and from the wasm

AW{"type":"awcppwasm"}
#include <stdlib.h>
#include <string.h>
#include <emscripten.h>


char *g_str_query;
char *g_str_response;

EMSCRIPTEN_KEEPALIVE
extern "C" void set_query(char* query)
{
    g_str_query = (char*)malloc(strlen(query)+1);
    if(g_str_query)
    {
        char* p=query;
        char* o=g_str_query;
        while(*p != '\0')
        {
            *o = (*p);
            o++;
            p++;
        } 
        *o = '\0';
    }
}

EMSCRIPTEN_KEEPALIVE
extern "C" char* get_response()
{
    return g_str_response;
}

EMSCRIPTEN_KEEPALIVE
extern "C" void myplot()
{
    g_str_response = "{\"data\":[0,0.0209774,0.0419455,0.0628952,0.0838172,0.104702,0.125541,0.146325,0.167045,0.18769,-0.146325,-0.125541,-0.104702,-0.0838169,-0.0628949,-0.0419452,-0.020977,3.49691e-7],\"type\":\"plot\",\"id\":\"plot_14\"}";
}


