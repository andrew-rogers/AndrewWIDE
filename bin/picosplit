#!/bin/sh

PSFILE=$1
FN_XML=$(basename "$PSFILE" .psdata)_settings.xml
FN_WAVES=$(basename "$PSFILE" .psdata)_waves.bin
FN_WAVE_PREFIX=$(basename "$PSFILE" .psdata)_w
FN_PNG=$(basename "$PSFILE" .psdata).png

# The version 6 psdata files are mainly composed of GZIPed streams easily
#  identified by the three-byte GZIP signature 0x1f 0x8b 0x08. the first of
#  these streams are the waveform buffers. The final GZIP stream is the
#  settings XML file. GZIP is defined in RFC1952 and XML is an open format used
#  very widely. The GZipped XML is followed by a PNG image.

GZ_SIG="1f 8b 08"
PNG_SIG="89 50 4e 47"

# Approximate locations of GZIP and PNG chunks
WAVE_ALOC=84
PSLEN=$(stat -c%s "$PSFILE")
PNG_ALOC=$(( $PSLEN - 3000))

# XML offset at 0x0c in header
#                              | Convert to hex | Remove LFs |
HDR=$(head -c84 "$PSFILE"      | od -An -tx4 -v | tr -d '\n' )
XML_ALOC=0x$(echo "$HDR" | head -c36 | tail -c8)
XML_ALOC=$(( $XML_ALOC + 172 ))

# PNG offset given at end of psdata file
#                        | Convert to hex | Remove LFs |
HDR=$(tail -c8 "$PSFILE" | od -An -tx4 -v | tr -d '\n' )
PNG_ALOC=0x$(echo "$HDR" | head -c9 | tail -c8)
PNG_ALOC=$(( $PNG_ALOC + 4 ))

# Locate a signature given approximate location
locate_sig()
{
    local fn=$1  # The name of the file to search in
    local loc=$2 # The approximate location
    local sig=$3 # The signature, space separated hex bytes, eg. "89 50 4e 47"
    local chunk=4096

    local start=$(( $loc - $chunk/2))
    if [ "$start" -lt "0" ]; then
        start=0;
    fi

    #          | Get the chunk from file                                 | Convert to hex | Remove LFs |
    local hex=$( (dd if="$fn" bs=1 skip=$start count=$chunk 2>/dev/null) | od -An -tx1 -v | tr -d '\n' )

    # Locate first occurrence
    #                        | Remove the signature  | Get the length   |
    #                        | and following hex     | of remaining hex |
    local offset=$(echo $hex | sed -n "s/ $sig.*//p" | wc -c            )
    if [ "$offset" -gt "0" ]; then
        echo $(( $start + $offset / 3 ))
    fi

    # Locate last occurrence
    #                        | Remove hex that precedes the | Get the length   |
    #                        | GZIP signature               | of remaining hex |
    local sigrem=$(echo $hex | sed -n "s/.* $sig / $sig /p" | wc -c            )
    if [ "$sigrem" -gt "0" ]; then
        echo $(( $start + $chunk - $sigrem / 3 ))
    else
        echo "-1"
    fi
}

# Locate the first GZIP - waves
WAVE_LOC=$( locate_sig "$PSFILE" "$WAVE_ALOC" "$GZ_SIG" | head -n1)
tail -c+$(( $WAVE_LOC +1 )) "$PSFILE" | gunzip > "$FN_WAVES"

# Locate the last GZIP  - settings XML
XML_LOC=$( locate_sig "$PSFILE" "$XML_ALOC" "$GZ_SIG" | tail -n1)
XML=$(tail -c+$(( $XML_LOC + 1)) "$PSFILE" | gunzip | tr -d '\000')
echo "$XML" > "$FN_XML"

# Get the GZipped wave offsets and lengths from XML
#                                                      | Remove left of =" | Remove right of " |
OFFSETS=$(echo "$XML"| grep "<offset value="           | sed "s/.*=\"//"   | sed "s/\".*//"    )
LENGTHS=$(echo "$XML"| grep "<compressedlength value=" | sed "s/.*=\"//"   | sed "s/\".*//"    )

ROW=0
echo "$OFFSETS" | while read OFFSET ; do
    ROW=$(( $ROW + 1))
    LENGTH=$(echo "$LENGTHS" | tail -n+$ROW | head -n1)
    OFFSET=$(( $OFFSET + 84 ))
    FN=$FN_WAVE_PREFIX$ROW.bin
    (dd if="$PSFILE" bs=1 skip=$OFFSET count=$LENGTH 2> /dev/null) | gunzip > "$FN"
done

# Locate the PNG image
PNG_LOC=$(locate_sig "$PSFILE" "$PNG_ALOC" "$PNG_SIG" | head -n1)
(dd if="$PSFILE" bs=1 skip=$PNG_LOC 2> /dev/null) > "$FN_PNG"

loc_error()
{
    printf " location estimated: %08x   Actual: %08x   Error: %d\n"  $1 $2 $(( $1 - $2))
}

(printf "Waves"; loc_error $WAVE_ALOC $WAVE_LOC) >&2
(printf "Settings"; loc_error $XML_ALOC $XML_LOC) >&2
(printf "PNG"; loc_error $PNG_ALOC $PNG_LOC) >&2

