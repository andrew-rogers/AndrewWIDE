AW{"type":"mjmd"}

1. Push values in JSArray
2. Plot JSArray
3. Get values from textarea

* JSArray is a WasmDSP class
* Plot is an AndrewWIDE class

Some equation: $y=m \times x + c$.

AW{"type":"wasmcpp","id":"globals","hidden":true}
#include "JSArray.h"
#include "emjs.h"

AW{"type":"javascript"}
AndrewWIDE.getWasmArray("myarr2");
window.plot = AndrewWIDE.plot;
window.unitCircle = AndrewWIDE.unitCircle;

AW{"type":"wasmcpp"}
WasmDSP::JSArray j("my_array");
float vals[] = {0.1, 0.2, 0.34};
j.write(vals, 3);
WasmDSP::jsEval("console.log('Hello!');console.log(wasm_module)");

AW{"type":"javascript"}
let y=[1,3,5,2]
plot(y)
plot(AndrewWIDE.wasm_mod.arrays.my_array)

AW{"type":"mono","id":"some_samples"}
samples: 0.4,-0.1,2.718,1.414

AW{"type":"javascript","inputs":["some_samples"]}
let s = getInput('some_samples')
let i = s.indexOf(':')
let name = s.substr(0,i).trim()
let vals = JSON.parse('[' + s.substr(i+1) + ']')
let a = AndrewWIDE.getWasmArray(name)
a.length = 0
a.push(...vals)
console.log(getNamedValues('some_samples'))

AW{"type":"wasmcpp","inputs":["some_samples"]}
WasmDSP::jsEval("console.log('Samples!')");

AW{"type":"javascript"}
AndrewWIDE.loadWasmDSPModules(['signal'])

AW{"type":"javascript"}
let bq = new AndrewWIDE.WasmDSP.modules.signal.Biquad(1,0,1,-1.9,0.97);
let x=[1];
for (let i=0; i<400; i++) x.push(0);
let resp = bq.process(x);
plot(resp);

AW{"type":"javascript"}
unitCircle();
plot([-1,1],[0,0]).marker('o').name('zeros');
plot([0.9,0.9],[0.2,-0.2]).marker('x').name('poles');

AW{"type":"javascript"}
let y=[1,3,5,2];
let circle = {type: 'circle'};
circle["x0"] = 1;
circle["y0"] = 1;
circle["x1"] = 1.5;
circle["y1"] = 1.25;
circle["opacity"] = 0.2;
let tri = {type: 'path'};
tri["path"] = 'M 2,1 L 2,2 L 3,3 Z';
tri["opacity"] = 0.8;
tri["fillcolor"] = 'green';
plot(y).shape(circle).shape(tri);

AW{"type":"javascript"}
let y=[1,3,5,2];
let t = plot(y);
t.graph.xlabel='time';
t.trace.fill = 'tozeroy';

AW{"type":"javascript"}
let y=[1,3,5,2,4];
let x=[1,2,3];
let y1 = [3,5,2];
plot(y);
plot(x,y1).style({mode: 'lines', color: 'red', width: 0, fill: 'tozeroy'}).name('area');
